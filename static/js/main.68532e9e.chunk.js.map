{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css","api.js","redux/contacts/actions.js","redux/contacts/operations.js","redux/contacts/selectors.js","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Phonebook/formData.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","redux/contacts/reducer.js","redux/store.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","instance","axios","create","baseURL","getAllContacts","a","get","data","addNewContact","newContact","post","removeContact","id","delete","getPhonebookContactsRequest","createAction","getPhonebookContactsSuccess","getPhonebookContactsError","addToPhonebookRequest","addToPhonebookSuccess","addToPhonebookError","removeFromPhonebookRequest","removeFromPhonebookSuccess","removeFromPhonebookError","filterPhonebook","getPhonebook","getContacts","dispatch","actions","api","addToPhonebook","addContacts","removeFromPhonebook","store","items","getFilter","filter","getFilterList","createSelector","contacts","filterItem","toLowerCase","item","name","includes","ContactItem","number","useDispatch","className","styles","Item","Text","Btn","type","onClick","ContactsList","filterList","useSelector","useEffect","List","map","FormData","pattern","title","Form","useState","setName","setNumber","nameInputIdRef","useRef","generate","numberInputIdRef","reset","onSubmit","e","preventDefault","isAvailableName","find","contact","isAvailableNumber","alert","action","addToContact","FormContainer","Name","Label","htmlFor","current","Input","required","value","onChange","target","Tel","NameBtn","Filter","Phonebook","container","Title","itemsReducer","createReducer","payload","push","_","idx","findIndex","splice","filterReducer","error","combineReducers","configureStore","reducer","contactsReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68532e9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__3c0bw\",\"List\":\"ContactsList_List__1UAk9\",\"Text\":\"ContactsList_Text__2cDL5\",\"Btn\":\"ContactsList_Btn__GB_5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__Yb216\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__20k7U\"};","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL:\n    \"http://https://my-json-server.typicode.com/natalimarch/goit-react-hw-07-phonebook\",\n});\n\nexport const getAllContacts = async () => {\n  const { data } = await instance.get(\"/\");\n  return data;\n};\n\nexport const addNewContact = async (newContact) => {\n  const { data } = await instance.post(\"/\", newContact);\n  return data;\n};\n\nexport const removeContact = async (id) => {\n  const { data } = await instance.delete(`/${id}`);\n  return data;\n};\n\nexport default {\n  getAllContacts,\n  addNewContact,\n  removeContact,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst getPhonebookContactsRequest = createAction(\"phonebook/get\");\nconst getPhonebookContactsSuccess = createAction(\"phonebook/getSuccess\");\nconst getPhonebookContactsError = createAction(\"phonebook/geterror\");\n\nconst addToPhonebookRequest = createAction(\"phonebook/add\");\nconst addToPhonebookSuccess = createAction(\"phonebook/addSuccess\");\nconst addToPhonebookError = createAction(\"phonebook/addError\");\n\nconst removeFromPhonebookRequest = createAction(\"phonebook/remove\");\nconst removeFromPhonebookSuccess = createAction(\"phonebook/removeSuccess\");\nconst removeFromPhonebookError = createAction(\"phonebook/removeError\");\n\nconst filterPhonebook = createAction(\"phonebok/filter\");\n\nexport default {\n  addToPhonebookRequest,\n  addToPhonebookSuccess,\n  addToPhonebookError,\n\n  removeFromPhonebookRequest,\n  removeFromPhonebookSuccess,\n  removeFromPhonebookError,\n\n  getPhonebookContactsRequest,\n  getPhonebookContactsSuccess,\n  getPhonebookContactsError,\n\n  filterPhonebook,\n};\n","import api from \"../../api\";\nimport actions from \"./actions\";\n\nexport const getPhonebook = () => {\n  const getContacts = async (dispatch) => {\n    dispatch(actions.getPhonebookContactsRequest());\n\n    try {\n      const data = await api.getAllContacts();\n      dispatch(actions.getPhonebookContactsSuccess(data));\n    } catch (error) {\n      dispatch(actions.getPhonebookContactsError(error));\n    }\n  };\n  return getContacts;\n};\n\nexport const addToPhonebook = (newContact) => {\n  const addContacts = async (dispatch) => {\n    dispatch(actions.addToPhonebookRequest());\n\n    try {\n      const data = await api.addNewContact(newContact);\n      dispatch(actions.addToPhonebookSuccess(data));\n    } catch (error) {\n      dispatch(actions.addToPhonebookError(error));\n    }\n  };\n  return addContacts;\n};\n\nexport const removeFromPhonebook = (id) => async (dispatch) => {\n  dispatch(actions.removeFromPhonebookRequest());\n\n  try {\n    const data = await api.removeContact(id);\n    dispatch(actions.removeFromPhonebookSuccess(data));\n  } catch (error) {\n    dispatch(actions.removeFromPhonebookError(error));\n  }\n};\n\nexport default {\n  getPhonebook,\n  addToPhonebook,\n  removeFromPhonebook,\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (store) => store.items;\n\nexport const getFilter = (store) => store.filter;\n\n// const getFilterList = () => {\n//   const filterItem = filter.toLowerCase();\n//   const filterContacts = contacts.filter((item) =>\n//     item?.name?.toLowerCase().includes(filterItem)\n//   );\n//   return filterContacts;\n// };\n\nexport const getFilterList = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const filterItem = filter.toLowerCase();\n    const filterContacts = contacts.filter((item) =>\n      item?.name?.toLowerCase().includes(filterItem)\n    );\n    return filterContacts;\n  }\n);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeFromPhonebook } from \"../../redux/contacts/operations\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const removeFromContact = () => {\n    dispatch(removeFromPhonebook(id));\n  };\n  return (\n    <li className={styles.Item}>\n      <p className={styles.Text}>\n        {name} {number}\n      </p>\n      <button className={styles.Btn} type=\"button\" onClick={removeFromContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPhonebook } from \"../../redux/contacts/operations\";\nimport { getFilterList } from \"../../redux/contacts/selectors\";\nimport ContactItem from \"./ContactItem\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactsList = () => {\n  const filterList = useSelector(getFilterList);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPhonebook());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul className={styles.List}>\n        {filterList.map(({ name, number, id }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactsList;\n","const FormData = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type: \"tel\",\n    name: \"number\",\n    pattern:\n      \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n  },\n};\n\nexport default FormData;\n","import React, { useRef } from \"react\";\nimport { generate } from \"shortid\";\nimport { useState } from \"react\";\nimport styles from \"./Form.module.css\";\nimport FormData from \"../Phonebook/formData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToPhonebook } from \"../../redux/contacts/operations\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\n\nconst Form = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputIdRef = useRef(generate());\n  const numberInputIdRef = useRef(generate());\n\n  const addToContact = () => {\n    const isAvailableName = contacts.find((contact) => contact.name === name);\n    const isAvailableNumber = contacts.find(\n      (contact) => contact.number === number\n    );\n    if (isAvailableName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (isAvailableNumber) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n    const action = addToPhonebook({ name, number });\n    dispatch(action);\n  };\n\n  const changeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const changeNumber = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addToContact();\n    // onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <div className={styles.FormContainer}>\n        <div className={styles.Name}>\n          <label className={styles.Label} htmlFor={nameInputIdRef.current}>\n            Name\n            <input\n              {...FormData.name}\n              className={styles.Input}\n              required\n              value={name}\n              onChange={changeName}\n              id={nameInputIdRef.current}\n            />\n          </label>\n        </div>\n        <div className={styles.Tel}>\n          <label className={styles.Label} htmlFor={numberInputIdRef.current}>\n            Number\n            <input\n              {...FormData.number}\n              className={styles.Input}\n              required\n              value={number}\n              onChange={changeNumber}\n              id={numberInputIdRef.current}\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className={styles.NameBtn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n// class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   nameInputId = generate();\n//   numberInputId = generate();\n\n//   handleChange = (e) => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: \"\",\n//       number: \"\",\n//     });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     const { handleSubmit, handleChange } = this;\n//     return (\n//       <form className={styles.Form} onSubmit={handleSubmit}>\n//         <div className={styles.FormContainer}>\n//           <div className={styles.Name}>\n//             <label className={styles.Label} htmlFor={this.nameInputId}>\n//               Name\n//               <input\n//                 {...FormData.name}\n//                 className={styles.Input}\n//                 required\n//                 value={name}\n//                 onChange={handleChange}\n//                 id={this.nameInputId}\n//               />\n//             </label>\n//           </div>\n//           <div className={styles.Tel}>\n//             <label className={styles.Label} htmlFor={this.numberInputId}>\n//               Number\n//               <input\n//                 {...FormData.number}\n//                 className={styles.Input}\n//                 required\n//                 value={number}\n//                 onChange={handleChange}\n//                 id={this.numberInputId}\n//               />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className={styles.NameBtn}>\n//             Add contact\n//           </button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport filterPhonebook from \"../../redux/contacts/actions\";\nimport { getFilter } from \"../../redux/contacts/selectors\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onChange = ({ target }) => {\n    dispatch(filterPhonebook(target.value));\n  };\n  return (\n    <>\n      <input\n        className={styles.Input}\n        onChange={onChange}\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styles from \"./Phonebook.module.css\";\nimport ContactsList from \"../ContactsList/ContactsList\";\nimport FormMain from \"../Form/Form\";\nimport Filter from \"../Filter/Filter\";\n\nconst Phonebook = () => {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.Title}>Phonebook</h2>\n      <FormMain />\n      <h2 className={styles.Title}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./actions\";\nimport { combineReducers } from \"redux\";\n\nconst itemsReducer = createReducer([], {\n  [actions.addToPhonebookSuccess]: (store, { payload }) => {\n    const newContact = { ...payload };\n    store.push(newContact);\n  },\n  [actions.getPhonebookContactsSuccess]: (_, { payload }) => payload,\n  [actions.removeFromPhonebookSuccess]: (store, { payload }) => {\n    const idx = store.findIndex(({ id }) => id === payload);\n    store.splice(idx, 1);\n  },\n});\n\nconst filterReducer = createReducer(\"\", {\n  [actions.filterPhonebook]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(\"\", {\n  [actions.getPhonebookContactsError]: (_, { payload }) => payload,\n  [actions.addToPhonebookError]: (_, { payload }) => payload,\n  [actions.removeFromPhonebookError]: (_, { payload }) => payload,\n  [actions.getPhonebookContactsRequest]: () => \"\",\n  [actions.addToPhonebookRequest]: () => \"\",\n  [actions.removeFromPhonebookRequest]: () => \"\",\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  error,\n});\n\n// const initialState = {\n//   contacts: {\n//     items: [],\n//     filter: \"\",\n//   },\n// };\n\n// const itemsReducer = (\n//   store = initialState.contacts.items,\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case types.ADD_TO_PHONEBOOK:\n//       const newContact = { ...payload, id: generate() };\n//       return [...store, newContact];\n\n//     case types.REMOVE_FROM_PHONEBOOK:\n//       const updateContacts = store.filter((item) => item.id !== payload);\n//       return updateContacts;\n\n//     default:\n//       return store;\n//   }\n// };\n\n// const filterReducer = (\n//   store = initialState.contacts.filter,\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case types.FILTER_PHONEBOOK:\n//       return payload;\n\n//     default:\n//       return store;\n//   }\n// };\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport contactsReducer from \"./contacts/reducer\";\n\nconst store = configureStore({\n  reducer: contactsReducer,\n});\n\nexport default store;\n","import \"./App.css\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Phonebook />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Form_Label__3QBfK\",\"Form\":\"Form_Form__2boAo\",\"Input\":\"Form_Input__1kIqz\",\"NameBtn\":\"Form_NameBtn__1jr4a\"};"],"sourceRoot":""}